use super::custom_data::CustomData
use super::custom_data::CallbackFunction
use ::java::util::effect::MobEffectInstance

type CommandStorage<T> = struct {
  root: T
}

dispatch :storage[mu:_] to CommandStorage<InternalStorage>
struct InternalStorage {
  macro?: struct MacroParam {
    id?: int @ 1..,
    function?: CallbackFunction
  },
  player_data?: struct PlayerDatabase {
    [#[integer(min=1)] string]: PlayerData
  },
  custom_data?: CustomData
}

dispatch :storage[mu:aec] to struct {
  custom_effects?: [MobEffectInstance]
}

dispatch :storage[mu:player_data] to CommandStorage<PlayerData>
struct PlayerData {
  [#[dispatcher_key="mu:player_data"] string]: mu:player_data[[%key]]
}
dispatch mu:player_data[%unknown] to any

dispatch mu:player_data[mu] to struct UtilPlayerData {
  /// [Readonly]
  /// The UUID of player
  uuid?: #[uuid] int[] @ 4
}
