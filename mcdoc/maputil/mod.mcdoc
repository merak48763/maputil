type CommandStorage<T> = struct {
  root: T
}

dispatch :storage[maputil:aec] to CommandStorage<:entity[area_effect_cloud]>

dispatch :storage[maputil:player_data] to CommandStorage<PlayerData>
struct PlayerData {
  [#[dispatcher_key="maputil:player_data"] string]: maputil:player_data[[%key]]
}
dispatch maputil:player_data[%unknown] to any

dispatch maputil:player_data[maputil] to struct UtilPlayerData {
  uuid?: #[uuid] int[] @ 4
}

dispatch :storage[maputil:_] to CommandStorage<InternalStorage>
struct InternalStorage {
  macro?: struct MacroParam {
    id?: int @ 1..
  },
  player_data?: struct PlayerDatabase {
    [#[integer(min=1)] string]: PlayerData
  },
  marker_data?: :entity[marker][data]
}


dispatch mcdoc:custom_data[maputil] to struct ItemData {
  translated?: struct {
    "_"?: int
  }
}


dispatch mcdoc:marker_data[interaction] to struct InteractionReactions {
  left_click?: ClickReactions,
  right_click?: ClickReactions,
  mutual_exclusive?: boolean
}
struct ClickReactions {
  this?: CallbackFunction,
  player?: CallbackFunction
}
struct CallbackFunction {
  function: #[id(registry="function", tags="allowed")] string
}
